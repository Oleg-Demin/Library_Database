--+----------------------+
--| Создание базы данных |
--+----------------------+
--create database library;








--+-----------------+
--| Создание таблиц |
--+-----------------+

-- КНИГИ (BOOKS)
create table books
(
    isbn bigint primary key,
    title varchar(255),
    publisher varchar(255),
    publication smallint default 1,
    subject varchar(255),
    realease_date date
);

-- АВТОРЫ (AUTHORS)
create table authors
(
    author_id serial primary key,
    name varchar(50) not null,
    surname varchar(50) not null,
    patronymic varchar(50)
);

-- КНИГИ_АВТОРЫ (BOOKS_AUTHORS) "Промежуточная таблица"
create table books_authors
(
    isbn bigint references books (isbn)
        on delete restrict on update cascade not null,
    author_id int references authors (author_id)
        on delete restrict on update cascade not null
);

-- МЕСТО ХРАНЕНИЯ (STORAGE)
create table storage
(
    id_cell serial primary key,
    room varchar(255) not null,
    shelving smallint not null,
    shelf smallint not null,
    cell varchar(1) not null
);

-- ЭКЗЕМПЛЯРЫ КНИГ (BOOK_COPIES)
create table book_copies
(
    id_copies serial primary key,
    availability bool default true,
    id_cell int references storage (id_cell)
        on delete restrict on update cascade not null,
    isbn bigint references books (isbn)
        on delete restrict on update cascade not null
);

-- ЧИТАТЕЛИ (READERS)
create table readers
(
    id_reader serial primary key,
    name varchar(50) not null,
    surname varchar(50) not null,
    patronymic varchar(50),
    birthday date not null,
    registration_date date default CURRENT_DATE,
    check (birthday < registration_date)
);

-- СОТРУДНИКИ (EMPLOYEES)
create table employees
(
    id_employee serial primary key,
    name varchar(50) not null,
    surname varchar(50) not null,
    patronymic varchar(50),
    birthday date not null,
    start_date date default CURRENT_DATE,
    check (birthday < start_date)
);

-- ВЫДАЧА ЭКЗЕМПЛЯРОВ (ISSUE_COPIES)
create table issue_copies
(
    id_copies int references book_copies (id_copies)
        on delete restrict on update cascade not null,
    id_reader int references readers (id_reader)
        on delete restrict on update cascade not null,
    id_employee_issuing int references employees (id_employee)
        on delete restrict on update cascade not null,
    id_employee_return int references employees (id_employee)
        on delete restrict on update cascade,
    issuing_date date default CURRENT_DATE,
    return_date date,
    check (issuing_date <= return_date)
);








-- +-------------------+
-- | Заполнение таблиц |
-- +-------------------+

-- АВТОРЫ (AUTHORS)
insert into authors (surname, name, patronymic) values
-- мужчиты
( 'Евдокимов', 'Дмитрий', 'Григорьевич' ),
( 'Кононов', 'Бронислав', 'Владимирович' ),
( 'Кулибаба', 'Платон', 'Александрович' ),
( 'Родионов', 'Матвей', 'Алексеевич' ),
( 'Муравьёв', 'Игнатий', 'Артёмович' ),
( 'Кудряшов', 'Павел', 'Романович' ),
( 'Наумов', 'Прохор', null ),
( 'Овчаренко', 'Камиль', null ),
( 'Лукин', 'Никита', null ),
( 'Миронов', 'Зиновий', null ),
-- женщиты
( 'Маслова', 'Елизавета', 'Андреевна' ),
( 'Котова', 'Борислава', 'Платоновна' ),
( 'Мирна', 'Эдита', 'Сергеевна' ),
( 'Романенко', 'Софья', 'Валериевна' ),
( 'Соловьёва', 'Инесса', 'Сергеевна' ),
( 'Петрова', 'Владлена', 'Михайловна' ),
( 'Яценюк', 'Устинья', null ),
( 'Кравченко', 'Нина', null ),
( 'Антонова', 'Шарлота', null ),
( 'Макарова', 'Доминика', null );

-- КНИГИ (BOOKS)
insert into books (isbn, title, publisher, publication, subject, realease_date) values
( 9781029624072, 'Мертвый защитник', 'Живое слово', 1, 'ужасы', '1960-09-20' ),
( 9781144735849, 'Мертвый защитник', 'Живое слово', 2, 'ужасы', '1962-02-17' ),
( 9781305693989, 'Мертвый защитник', 'Живое слово', 3, 'ужасы', '1963-09-11' ),
( 9781537953064, 'Факультет гламурных магов', 'Живое слово', 1, 'ужасы', '1968-05-29' ),
( 9781542775060, 'Факультет гламурных магов', 'Живое слово', 2, 'ужасы', '1969-07-15' ),
( 9781783529332, 'Факультет гламурных магов', 'Живое слово', 3, 'ужасы', '1970-05-12' ),
( 9781820394949, 'Мертвые кости', 'Живое слово', 1, 'романтика', '1970-06-18' ),
( 9781848226028, 'Мертвые кости', 'Живое слово', 2, 'романтика', '1971-10-24' ),
( 9782270623166, 'Вечный октябрь', 'Букбастер', 1, 'романтика', '1971-02-16' ),
( 9782429750987, 'Вечный октябрь', 'Букбастер', 2, 'романтика', '1971-07-25' ),
( 9782849274004, 'Откровения Антиклеомаха', 'Букбастер', 1, 'комедия', '1971-09-23' ),
( 9783165988247, 'Откровения Антиклеомаха', 'Букбастер', 2, 'комедия', '1972-09-23' ),
( 9783201699174, 'Секрет пустых коридоров', 'Букбастер', 1, 'комедия', '1973-07-11' ),
( 9783326162758, 'Секрет пустых коридоров', 'Букбастер', 2, 'комедия', '1974-05-11' ),
( 9783358314431, 'Секрет пустых коридоров', 'Букбастер', 3, 'комедия', '1975-06-20' ),
( 9783566763847, 'Секрет пустых коридоров', 'Букбастер', 4, 'комедия', '1977-07-20' ),
( 9783957672270, 'Потрясающее решение', 'Книжный лабиринт', 1, 'вестерн', '1979-12-01' ),
( 9784412248272, 'Потрясающее решение', 'Книжный лабиринт', 2, 'вестерн', '1980-07-15' ),
( 9784592977104, 'Потрясающее решение', 'Книжный лабиринт', 3, 'вестерн', '1981-01-07' ),
( 9784614811236, 'Ядовитый питомец', 'Книжный лабиринт', 1, 'вестерн', '1984-01-14' ),
( 9784678303529, 'Ядовитый питомец', 'Книжный лабиринт', 2, 'вестерн', '1984-10-14' ),
( 9785116719925, 'Одноглазый поцелуй', 'Книжный лабиринт', 1,  'вестерн', '1984-12-27' ),
( 9785529994334, 'Одноглазый поцелуй', 'Книжный лабиринт', 2, 'вестерн', '1985-06-18' ),
( 9785948434967, 'Великий роман', 'Книжный лабиринт', 1, 'вестерн', '1989-08-18' ),
( 9785952391707, 'Сила крови', 'Старый свет', 1, 'драмма', '1989-10-17' ),
( 9786111972829, 'Секретарь высокомерного злодея', 'Старый свет', 2, 'драмма', '1990-01-10' ), 
( 9786146485839, 'Училище демонических чужеземцев', 'Старый свет', 2, 'драмма', '1990-11-29' ),
( 9786456995555, 'Океан нашей безмятежности', 'Старый свет', 2, 'драмма', '1993-12-21' ),
( 9786520172800, 'Наш маленький мир', 'Книжная башня', 3, 'драмма', '1995-03-02' ),
( 9786629433234, 'Между сказкой и страхом', 'Книжная башня', 3, 'драмма', '1995-03-17' ),
( 1715640887, 'Лицей демонических стрелков', 'Книжная башня', 1, 'драмма', '1995-04-22' ),
( 2411903250, 'Лицей демонических стрелков', 'Книжная башня', 3, 'драмма', '1995-09-28' ),
( 2776610778, 'Дом на берегу озера', 'Книжная башня', 1, 'романтика', '1996-03-11' ),
( 3192851890, 'Дом на берегу озера', 'Книжная башня', 2, 'романтика', '1996-04-14' ),
( 3392550461, 'Дом на берегу озера', 'Гиперион', 3, 'романтика', '1997-04-11' ),
( 4294282922, 'Запах леса', 'Гиперион', 1, 'романтика', '1998-02-20' ),
( 4390426046, 'Прощальная встреча', 'Гиперион', 1, 'романтика', '1999-07-18' ),
( 4538252718, 'Воскресший закат', 'Гиперион', 1, 'романтика', '2000-12-04' ),
( 4541086879, 'Эра сердец', 'Гиперион', 1, 'романтика', '2002-10-10' ),
( 5031600982, 'Проект 019', 'Гиперион', 1, 'ужасы', '2006-05-13' ),
( 5072476418, 'Окончательная буря', 'Гиперион', 1, 'ужасы', '2009-03-02' ),
( 5605718187, 'Моя красивая эпоха', 'Гиперион', 1, 'ужасы', '2013-02-04' ),
( 6572537060, 'Секрет потерянной ярости', 'Русское зарубежье', 1, 'ужасы', '2014-02-02' ),
( 6874431457, 'Лесной Сан-Фиеро', 'Русское зарубежье', 1, null, '2014-02-05' ),
( 7506790944, 'Фиолетовый туман', 'Русское зарубежье', 1, null, '2016-01-22' ),
( 7640565356, 'Химия любви', 'Русское зарубежье', 1, null, '2016-12-31' ),
( 8136845974, 'Слепая правда', 'Русское зарубежье', 1, null, '2017-04-26' ),
( 8669740028, 'Магическая собака', 'Русское зарубежье', 1, null, '2017-05-13' ),
( 9066054929, 'Слёзы утраченной реальности', 'Русское зарубежье', 1, null, '2017-05-13' ),
( 9541394142, 'Найди смысл', 'Русское зарубежье', 1, null, '2017-05-13' );

-- КНИГИ_АВТОРЫ (BOOKS_AUTHORS) "Промежуточняая таблица"
insert into books_authors (isbn, author_id) values
( 9781029624072, 1 ),
( 9781029624072, 2 ),
( 9781029624072, 3 ),
( 9781144735849, 1 ),
( 9781144735849, 2 ),
( 9781144735849, 3 ),
( 9781305693989, 1 ),
( 9781305693989, 2 ),
( 9781305693989, 3 ),
( 9781537953064, 4 ),
( 9781537953064, 5 ),
( 9781537953064, 6 ),
( 9781542775060, 4 ),
( 9781542775060, 5 ),
( 9781542775060, 6 ),
( 9781783529332, 4 ),
( 9781783529332, 5 ),
( 9781783529332, 6 ),
( 9781820394949, 7 ),
( 9781820394949, 8 ),
( 9781820394949, 9 ),
( 9781848226028, 7 ),
( 9781848226028, 8 ),
( 9781848226028, 9 ),
( 9782270623166, 10 ),
( 9782270623166, 11 ),
( 9782270623166, 12 ),
( 9782429750987, 10 ),
( 9782429750987, 11 ),
( 9782429750987, 12 ),
( 9782849274004, 13 ),
( 9782849274004, 14 ),
( 9783165988247, 13 ),
( 9783165988247, 14 ),
( 9783201699174, 15 ),
( 9783201699174, 16 ),
( 9783326162758, 15 ),
( 9783326162758, 16 ),
( 9783358314431, 15 ),
( 9783358314431, 16 ),
( 9783566763847, 15 ),
( 9783566763847, 16 ),
( 9783957672270, 17 ),
( 9783957672270, 18 ),
( 9784412248272, 17 ),
( 9784412248272, 18 ),
( 9784592977104, 17 ),
( 9784592977104, 18 ),
( 9784614811236, 19 ),
( 9784614811236, 20 ),
( 9784678303529, 19 ),
( 9784678303529, 20 ),
( 9785116719925, 1 ),
( 9785116719925, 2 ),
( 9785529994334, 1 ),
( 9785529994334, 2 ),
( 9785948434967, 17 ),
( 9785948434967, 18 ),
( 9785952391707, 19 ),
( 9785952391707, 20 ),
( 9786111972829, 1 ),
( 9786111972829, 2 ),
( 9786146485839, 3 ),
( 9786146485839, 4 ),
( 9786456995555, 5 ),
( 9786456995555, 6 ),
( 9786520172800, 7 ),
( 9786520172800, 8 ),
( 9786629433234, 9 ),
( 9786629433234, 10 ),
( 1715640887, 11 ),
( 2411903250, 11 ),
( 2776610778, 12 ),
( 3192851890, 12 ),
( 3392550461, 12 ),
( 4294282922, 13 ),
( 4390426046, 14 ),
( 4538252718, 15 ),
( 4541086879, 16 ),
( 5031600982, 17 ),
( 5072476418, 18 ),
( 5605718187, 19 ),
( 6572537060, 20 ),
( 6874431457, 1 ),
( 7506790944, 2 ),
( 7640565356, 3 ),
( 7640565356, 4 ),
( 7640565356, 5 ),
( 7640565356, 6 ),
( 8136845974, 7 ),
( 8136845974, 8 ),
( 8136845974, 9 ),
( 8136845974, 10 ),
( 8669740028, 11 ),
( 8669740028, 12 ),
( 8669740028, 13 ),
( 8669740028, 14 ),
( 9066054929, 15 ),
( 9066054929, 16 ),
( 9066054929, 17 ),
( 9066054929, 18 ),
( 9541394142, 19 ),
( 9541394142, 20 ),
( 9541394142, 1 ),
( 9541394142, 2 );


-- СОТРУДНИКИ (EMPLOYEES)
insert into employees (surname, name, patronymic, birthday, start_date) values
-- мужчиты
( 'Селиверстов', 'Цицерон', 'Григорьевич', '1963-09-04', '1999-07-17' ),
( 'Трясило', 'Эдуард', 'Артёмович', '1974-12-31', '2000-01-15' ),
( 'Филатов', 'Цефас', 'Станиславович', '1983-12-28', '2010-04-26' ),
( 'Осипов', 'Лев', 'Сергеевич', '1983-09-28', '2008-12-29' ),
( 'Дроздов', 'Станислав', 'Дмитриевич', '1972-09-17', '2001-03-19' ),
-- женщины
( 'Иваненко', 'Вера', 'Юхимовна', '1964-04-05', '1990-07-06' ),
( 'Медведева', 'Хильда', 'Львовна', '1975-05-31', '2000-01-09' ),
( 'Негода', 'Беатриса', 'Владимировна', '1977-05-03', '2000-01-23' ),
( 'Майборода', 'Чеслава', 'Виталиевна', '1981-01-04', '2008-05-27' ),
( 'Белоусова', 'Виктория', 'Анатолиевна', '1960-12-09', '1990-05-28' );



-- ЧИТАТЕЛИ (READERS)
insert into readers (surname, name, patronymic, birthday, registration_date) values
-- мужчиты
( 'Петухов', 'Гавриил', 'Оманович', '2000-07-01', '2008-09-06' ),
( 'Каськив', 'Юлий', 'Михайлович', '1982-06-13', '2011-03-06' ),
( 'Выговский', 'Чеслав', 'Васильевич', '2001-06-01', '2010-06-09' ),
( 'Никитин', 'Жерар', 'Брониславович', '1982-09-04', '2010-11-09' ),
( 'Васильев', 'Станислав', 'Юхимович', '1981-02-06', '2011-12-15' ),
( 'Громов', 'Шамиль', 'Борисович', '1993-06-02', '2010-09-13' ),
( 'Петухов', 'Никодим', 'Данилович', '1999-04-19', '2008-01-20' ),
( 'Предыбайло', 'Николай', 'Богданович', '1982-06-07', '2008-12-28' ),
( 'Фомин', 'Стефан', 'Алексеевич', '1984-07-24', '2009-06-10' ),
( 'Ефремов', 'Тит', 'Викторович', '1984-11-10', '2011-08-28' ),
( 'Бутко', 'Устин', 'Борисович', '1994-03-04', '2012-12-06' ),
( 'Моисеенко', 'Устин', 'Борисович', '1991-08-11', '2008-10-02' ),
( 'Никифоров', 'Глеб', 'Андреевич', '1994-07-05', '2011-04-11' ),
( 'Кличко', 'Йозеф', 'Анатолиевич', '1991-03-19', '2009-04-07' ),
( 'Сердюк', 'Юлий', 'Борисович', '1984-11-30', '2010-08-21' ),
( 'Лобанов', 'Емельян', 'Владимирович', '1981-05-26', '2008-02-17' ),
( 'Котов', 'Зиновий', 'Михайлович', '1998-02-22', '2012-07-06' ),
( 'Крюков', 'Дмитрий', 'Максимович', '1998-12-19', '2012-11-04' ),
( 'Сирко', 'Павел', 'Фёдорович', '1994-02-14', '2011-11-02' ),
( 'Николаев', 'Яков', 'Вадимович', '2000-07-24', '2012-12-07' ),
-- женщины
( 'Ерёменко', 'Хильда', 'Ярославовна', '1991-08-21', '2008-08-14' ),
( 'Васильева', 'Алёна', 'Ярославовна', '2000-10-31', '2012-05-26' ),
( 'Соловьёва', 'Эльмира', 'Алексеевна', '1991-10-23', '2008-06-04' ),
( 'Коваленко', 'Инна', 'Евгеньевна', '1988-03-10', '2009-04-02' ),
( 'Исаева', 'Татьяна', 'Вадимовна', '1990-02-02', '2010-01-28' ),
( 'Терещенко', 'Марта', 'Артёмовна', '1991-01-07', '2008-08-05' ),
( 'Зыкова', 'Чечилия', 'Максимовна', '1986-08-26', '2008-02-29' ),
( 'Дубченко', 'Нонна', 'Станиславовна', '1983-04-18', '2012-08-03' ),
( 'Сасько', 'Злата', 'Андреевна', '1999-08-20', '2011-03-24' ),
( 'Коломоец', 'Юлия', 'Даниловна', '1980-11-07', '2012-05-12' ),
( 'Тихонова', 'Христина', 'Викторовна', '1980-08-07', '2011-03-16' ),
( 'Устинова', 'Зинаида', 'Максимовна', '2000-09-11', '2011-03-26' ),
( 'Капустина', 'Глафира', 'Артёмовна', '1995-09-21', '2010-10-17' ),
( 'Легойда', 'Злата', 'Леонидовна', '1980-07-02', '2012-02-26' ),
( 'Шумило', 'Элина', 'Даниловна', '1986-03-13', '2011-09-27' ),
( 'Худобяк', 'Цвета', 'Станиславовна', '1986-10-09', '2012-06-05' ),
( 'Повалий', 'Капитолина', 'Богдановна', '1988-06-13', '2011-03-13' ),
( 'Лукина', 'Полина', 'Фёдоровна', '1993-07-17', '2009-10-10' ),
( 'Мирна', 'Зоя', 'Леонидовна', '1993-02-02', '2010-12-27' ),
( 'Легойда', 'Полина', 'Анатолиевна', '1989-01-06', '2012-10-25' );


-- МЕСТО ХРАНЕНИЯ (STORAGE)
insert into storage (room, shelving, shelf, cell) values
( 'читальный зал', 1, 1, 'А' ),
( 'читальный зал', 1, 1, 'Б' ),
( 'читальный зал', 1, 1, 'В' ),
( 'читальный зал', 1, 1, 'Г' ),
( 'читальный зал', 1, 1, 'Д' ),
( 'читальный зал', 1, 1, 'Е' ),
( 'читальный зал', 1, 2, 'Ё' ),
( 'читальный зал', 1, 2, 'Ж' ),
( 'читальный зал', 1, 2, 'З' ),
( 'читальный зал', 1, 2, 'И' ),
( 'читальный зал', 1, 2, 'Й' ),
( 'читальный зал', 1, 2, 'К' ),
( 'читальный зал', 1, 3, 'Л' ),
( 'читальный зал', 1, 3, 'М' ),
( 'читальный зал', 1, 3, 'Н' ),
( 'читальный зал', 1, 3, 'О' ),
( 'читальный зал', 1, 3, 'П' ),
( 'читальный зал', 1, 3, 'Р' ),
( 'читальный зал', 1, 4, 'С' ),
( 'читальный зал', 1, 4, 'Т' ),
( 'читальный зал', 1, 4, 'У' ),
( 'читальный зал', 1, 4, 'Ф' ),
( 'читальный зал', 1, 4, 'Х' ),
( 'читальный зал', 1, 4, 'Ц' ),
( 'читальный зал', 1, 5, 'Ч' ),
( 'читальный зал', 1, 5, 'Ш' ),
( 'читальный зал', 1, 5, 'Щ' ),
( 'читальный зал', 1, 5, 'Ы' ),
( 'читальный зал', 1, 5, 'Э' ),
( 'читальный зал', 1, 5, 'Ю' ),
( 'читальный зал', 1, 5, 'Я' ),
( 'читальный зал', 2, 1, 'А' ),
( 'читальный зал', 2, 1, 'Б' ),
( 'читальный зал', 2, 1, 'В' ),
( 'читальный зал', 2, 1, 'Г' ),
( 'читальный зал', 2, 1, 'Д' ),
( 'читальный зал', 2, 1, 'Е' ),
( 'читальный зал', 2, 2, 'Ё' ),
( 'читальный зал', 2, 2, 'Ж' ),
( 'читальный зал', 2, 2, 'З' ),
( 'читальный зал', 2, 2, 'И' ),
( 'читальный зал', 2, 2, 'Й' ),
( 'читальный зал', 2, 2, 'К' ),
( 'читальный зал', 2, 3, 'Л' ),
( 'читальный зал', 2, 3, 'М' ),
( 'читальный зал', 2, 3, 'Н' ),
( 'читальный зал', 2, 3, 'О' ),
( 'читальный зал', 2, 3, 'П' ),
( 'читальный зал', 2, 3, 'Р' ),
( 'читальный зал', 2, 4, 'С' ),
( 'читальный зал', 2, 4, 'Т' ),
( 'читальный зал', 2, 4, 'У' ),
( 'читальный зал', 2, 4, 'Ф' ),
( 'читальный зал', 2, 4, 'Х' ),
( 'читальный зал', 2, 4, 'Ц' ),
( 'читальный зал', 2, 5, 'Ч' ),
( 'читальный зал', 2, 5, 'Ш' ),
( 'читальный зал', 2, 5, 'Щ' ),
( 'читальный зал', 2, 5, 'Ы' ),
( 'читальный зал', 2, 5, 'Э' ),
( 'читальный зал', 2, 5, 'Ю' ),
( 'читальный зал', 2, 5, 'Я' ),
( 'склад', 1, 1, 'А' ),
( 'склад', 1, 1, 'Б' ),
( 'склад', 1, 1, 'В' ),
( 'склад', 1, 1, 'Г' ),
( 'склад', 1, 1, 'Д' ),
( 'склад', 1, 1, 'Е' ),
( 'склад', 1, 2, 'Ё' ),
( 'склад', 1, 2, 'Ж' ),
( 'склад', 1, 2, 'З' ),
( 'склад', 1, 2, 'И' ),
( 'склад', 1, 2, 'Й' ),
( 'склад', 1, 2, 'К' ),
( 'склад', 1, 3, 'Л' ),
( 'склад', 1, 3, 'М' ),
( 'склад', 1, 3, 'Н' ),
( 'склад', 1, 3, 'О' ),
( 'склад', 1, 3, 'П' ),
( 'склад', 1, 3, 'Р' ),
( 'склад', 1, 4, 'С' ),
( 'склад', 1, 4, 'Т' ),
( 'склад', 1, 4, 'У' ),
( 'склад', 1, 4, 'Ф' ),
( 'склад', 1, 4, 'Х' ),
( 'склад', 1, 4, 'Ц' ),
( 'склад', 1, 5, 'Ч' ),
( 'склад', 1, 5, 'Ш' ),
( 'склад', 1, 5, 'Щ' ),
( 'склад', 1, 5, 'Ы' ),
( 'склад', 1, 5, 'Э' ),
( 'склад', 1, 5, 'Ю' ),
( 'склад', 1, 5, 'Я' ),
( 'склад', 2, 1, 'А' ),
( 'склад', 2, 1, 'Б' ),
( 'склад', 2, 1, 'В' ),
( 'склад', 2, 1, 'Г' ),
( 'склад', 2, 1, 'Д' ),
( 'склад', 2, 1, 'Е' ),
( 'склад', 2, 2, 'Ё' ),
( 'склад', 2, 2, 'Ж' ),
( 'склад', 2, 2, 'З' ),
( 'склад', 2, 2, 'И' ),
( 'склад', 2, 2, 'Й' ),
( 'склад', 2, 2, 'К' ),
( 'склад', 2, 3, 'Л' ),
( 'склад', 2, 3, 'М' ),
( 'склад', 2, 3, 'Н' ),
( 'склад', 2, 3, 'О' ),
( 'склад', 2, 3, 'П' ),
( 'склад', 2, 3, 'Р' ),
( 'склад', 2, 4, 'С' ),
( 'склад', 2, 4, 'Т' ),
( 'склад', 2, 4, 'У' ),
( 'склад', 2, 4, 'Ф' ),
( 'склад', 2, 4, 'Х' ),
( 'склад', 2, 4, 'Ц' ),
( 'склад', 2, 5, 'Ч' ),
( 'склад', 2, 5, 'Ш' ),
( 'склад', 2, 5, 'Щ' ),
( 'склад', 2, 5, 'Ы' ),
( 'склад', 2, 5, 'Э' ),
( 'склад', 2, 5, 'Ю' ),
( 'склад', 2, 5, 'Я' );


-- ЭКЗЕМПЛЯРЫ КНИГ (BOOK_COPIES)
insert into book_copies (availability, isbn, id_cell) values
( true, 9781029624072, 14 ),
( false, 9781029624072, 14 ),
( false, 9781029624072, 14 ),
( false, 9781029624072, 14 ),
( true, 9781029624072, 14 ),
( true, 9781029624072, 76 ),
( true, 9781029624072, 76 ),
( true, 9781029624072, 76 ),
( true, 9781029624072, 76 ),
( true, 9781029624072, 76 ),

( true, 9781144735849, 45 ),
( true, 9781144735849, 45 ),
( true, 9781144735849, 45 ),
( true, 9781144735849, 45 ),
( true, 9781144735849, 45 ),
( false, 9781144735849, 107 ),
( false, 9781144735849, 107 ),
( true, 9781144735849, 107 ),
( true, 9781144735849, 107 ),
( true, 9781144735849, 107 ),

( true, 9781305693989, 14 ),
( true, 9781305693989, 14 ),
( true, 9781305693989, 14 ),
( true, 9781305693989, 14 ),
( true, 9781305693989, 14 ),
( true, 9781305693989, 76 ),
( true, 9781305693989, 76 ),
( false, 9781305693989, 76 ),
( true, 9781305693989, 76 ),
( true, 9781305693989, 76 ),

( true, 9781537953064, 22 ),
( true, 9781537953064, 22 ),
( true, 9781537953064, 22 ),
( false, 9781537953064, 22 ),
( false, 9781537953064, 22 ),
( true, 9781537953064, 84 ),
( true, 9781537953064, 84 ),
( true, 9781537953064, 84 ),
( true, 9781537953064, 84 ),
( true, 9781537953064, 84 ),

( true, 9781542775060, 53 ),
( true, 9781542775060, 53 ),
( true, 9781542775060, 53 ),
( true, 9781542775060, 53 ),
( true, 9781542775060, 53 ),
( false, 9781542775060, 115 ),
( false, 9781542775060, 115 ),
( false, 9781542775060, 115 ),
( true, 9781542775060, 115 ),
( true, 9781542775060, 115 ),

( true, 9781783529332, 53 ),
( true, 9781783529332, 53 ),
( true, 9781783529332, 53 ),
( false, 9781783529332, 53 ),
( false, 9781783529332, 53 ),
( true, 9781783529332, 115 ),
( true, 9781783529332, 115 ),
( true, 9781783529332, 115 ),
( true, 9781783529332, 115 ),
( true, 9781783529332, 115 ),

( true, 9781820394949, 14 ),
( true, 9781820394949, 14 ),
( true, 9781820394949, 14 ),
( true, 9781820394949, 14 ),
( false, 9781820394949, 14 ),
( false, 9781820394949, 76 ),
( true, 9781820394949, 76 ),
( true, 9781820394949, 76 ),
( true, 9781820394949, 76 ),
( true, 9781820394949, 76 ),

( true, 9781848226028, 45 ),
( true, 9781848226028, 45 ),
( true, 9781848226028, 45 ),
( true, 9781848226028, 45 ),
( true, 9781848226028, 45 ),
( false, 9781848226028, 107 ),
( false, 9781848226028, 107 ),
( true, 9781848226028, 107 ),
( true, 9781848226028, 107 ),
( true, 9781848226028, 107 ),

( true, 9782270623166, 3 ),
( false, 9782270623166, 3 ),
( false, 9782270623166, 3 ),
( false, 9782270623166, 3 ),
( true, 9782270623166, 3 ),
( true, 9782270623166, 65 ),
( true, 9782270623166, 65 ),
( true, 9782270623166, 65 ),
( false, 9782270623166, 65 ),
( false, 9782270623166, 65 ),

( true, 9782429750987, 34 ),
( true, 9782429750987, 34 ),
( true, 9782429750987, 34 ),
( true, 9782429750987, 34 ),
( true, 9782429750987, 34 ),
( true, 9782429750987, 96 ),
( true, 9782429750987, 96 ),
( true, 9782429750987, 96 ),
( false, 9782429750987, 96 ),
( true, 9782429750987, 96 ),

( true, 9782849274004, 16 ),
( true, 9782849274004, 16 ),
( true, 9782849274004, 16 ),
( true, 9782849274004, 16 ),
( true, 9782849274004, 16 ),
( false, 9782849274004, 78 ),
( false, 9782849274004, 78 ),
( true, 9782849274004, 78 ),
( true, 9782849274004, 78 ),
( true, 9782849274004, 78 ),

( true, 9783165988247, 47 ),
( true, 9783165988247, 47 ),
( true, 9783165988247, 47 ),
( true, 9783165988247, 47 ),
( true, 9783165988247, 47 ),
( true, 9783165988247, 109 ),
( true, 9783165988247, 109 ),
( false, 9783165988247, 109 ),
( false, 9783165988247, 109 ),
( false, 9783165988247, 109 ),

( true, 9783201699174, 19 ),
( true, 9783201699174, 19 ),
( true, 9783201699174, 19 ),
( true, 9783201699174, 19 ),
( false, 9783201699174, 19 ),
( false, 9783326162758, 81 ),
( true, 9783326162758, 81 ),
( true, 9783326162758, 81 ),
( false, 9783326162758, 81 ),
( false, 9783326162758, 81 ),

( false, 9783358314431, 50 ),
( false, 9783358314431, 50 ),
( true, 9783358314431, 50 ),
( true, 9783358314431, 50 ),
( true, 9783358314431, 50 ),
( true, 9783566763847, 112 ),
( true, 9783566763847, 112 ),
( true, 9783566763847, 112 ),
( true, 9783566763847, 112 ),
( true, 9783566763847, 112 ),

( true, 9783957672270, 17 ),
( true, 9783957672270, 17 ),
( false, 9783957672270, 17 ),
( false, 9783957672270, 17 ),
( true, 9783957672270, 17 ),
( true, 9783957672270, 79 ),
( true, 9783957672270, 79 ),
( true, 9783957672270, 79 ),
( true, 9783957672270, 79 ),
( true, 9783957672270, 79 ),

( true, 9784412248272, 48 ),
( true, 9784412248272, 48 ),
( true, 9784412248272, 48 ),
( true, 9784412248272, 48 ),
( false, 9784412248272, 48 ),
( false, 9784412248272, 110 ),
( false, 9784412248272, 110 ),
( true, 9784412248272, 110 ),
( true, 9784412248272, 110 ),
( true, 9784412248272, 110 ),

( true, 9784592977104, 17 ),
( true, 9784592977104, 17 ),
( true, 9784592977104, 17 ),
( true, 9784592977104, 17 ),
( true, 9784592977104, 17 ),
( true, 9784592977104, 110 ),
( true, 9784592977104, 110 ),
( false, 9784592977104, 110 ),
( false, 9784592977104, 110 ),
( true, 9784592977104, 110 ),

( true, 9784614811236, 31 ),
( true, 9784614811236, 31 ),
( true, 9784614811236, 31 ),
( true, 9784614811236, 31 ),
( true, 9784614811236, 31 ),
( false, 9784614811236, 93 ),
( true, 9784614811236, 93 ),
( true, 9784614811236, 93 ),
( true, 9784614811236, 93 ),
( true, 9784614811236, 93 ),

( true, 9784678303529, 62 ),
( true, 9784678303529, 62 ),
( true, 9784678303529, 62 ),
( true, 9784678303529, 62 ),
( false, 9784678303529, 62 ),
( false, 9784678303529, 124 ),
( true, 9784678303529, 124 ),
( true, 9784678303529, 124 ),
( true, 9784678303529, 124 ),
( false, 9784678303529, 124 ),

( true, 9785116719925, 16 ),
( true, 9785116719925, 16 ),
( true, 9785116719925, 16 ),
( true, 9785116719925, 16 ),
( true, 9785116719925, 16 ),
( true, 9785116719925, 78 ),
( false, 9785116719925, 78 ),
( false, 9785116719925, 78 ),
( true, 9785116719925, 78 ),
( true, 9785116719925, 78 ),

( true, 9785529994334, 47 ),
( true, 9785529994334, 47 ),
( true, 9785529994334, 47 ),
( true, 9785529994334, 47 ),
( true, 9785529994334, 47 ),
( false, 9785529994334, 109 ),
( false, 9785529994334, 109 ),
( true, 9785529994334, 109 ),
( true, 9785529994334, 109 ),
( true, 9785529994334, 109 ),

( true, 9785948434967, 3 ),
( true, 9785948434967, 3 ),
( true, 9785948434967, 3 ),
( true, 9785948434967, 34 ),
( true, 9785948434967, 34 ),
( true, 9785948434967, 65 ),
( true, 9785948434967, 65 ),
( false, 9785948434967, 96 ),
( true, 9785948434967, 96 ),
( true, 9785948434967, 96 ),

( true, 9785952391707, 19 ),
( true, 9785952391707, 19 ),
( true, 9785952391707, 50 ),
( false, 9785952391707, 50 ),
( false, 9785952391707, 81 ),
( false, 9785952391707, 81 ),
( true, 9785952391707, 81 ),
( true, 9785952391707, 112 ),
( true, 9785952391707, 112 ),
( true, 9785952391707, 112 ),

( true, 9786111972829, 19 ),
( true, 9786111972829, 19 ),
( true, 9786111972829, 19 ),
( true, 9786111972829, 50 ),
( false, 9786111972829, 50 ),
( false, 9786111972829, 50 ),
( true, 9786111972829, 81 ),
( true, 9786111972829, 112 ),
( true, 9786111972829, 112 ),
( true, 9786111972829, 112 ),

( true, 9786146485839, 21 ),
( true, 9786146485839, 21 ),
( true, 9786146485839, 52 ),
( false, 9786146485839, 52 ),
( true, 9786146485839, 83 ),
( true, 9786146485839, 83 ),
( true, 9786146485839, 83 ),
( true, 9786146485839, 114 ),
( true, 9786146485839, 114 ),
( true, 9786146485839, 114 ),

( true, 9786456995555, 16 ),
( true, 9786456995555, 16 ),
( true, 9786456995555, 47 ),
( true, 9786456995555, 47 ),
( false, 9786456995555, 78 ),
( false, 9786456995555, 78 ),
( true, 9786456995555, 78 ),
( true, 9786456995555, 109 ),
( true, 9786456995555, 109 ),
( true, 9786456995555, 109 ),

( true, 9786520172800, 15 ),
( true, 9786520172800, 15 ),
( true, 9786520172800, 46 ),
( true, 9786520172800, 46 ),
( true, 9786520172800, 77 ),
( true, 9786520172800, 77 ),
( false, 9786520172800, 77 ),
( false, 9786520172800, 108 ),
( true, 9786520172800, 108 ),
( true, 9786520172800, 108 ),

( true, 9786629433234, 14 ),
( false, 9786629433234, 14 ),
( false, 9786629433234, 45 ),
( false, 9786629433234, 45 ),
( true, 9786629433234, 76 ),
( true, 9786629433234, 76 ),
( true, 9786629433234, 76 ),
( true, 9786629433234, 107 ),
( true, 9786629433234, 107 ),
( true, 9786629433234, 107 ),

( true, 1715640887, 13 ),
( true, 1715640887, 13 ),
( true, 1715640887, 44 ),
( true, 1715640887, 44 ),
( true, 1715640887, 75 ),
( true, 1715640887, 75 ),
( false, 1715640887, 75 ),
( false, 1715640887, 106 ),
( false, 1715640887, 106 ),
( true, 1715640887, 106 ),

( true, 2411903250, 13 ),
( true, 2411903250, 13 ),
( true, 2411903250, 44 ),
( true, 2411903250, 44 ),
( true, 2411903250, 75 ),
( true, 2411903250, 75 ),
( true, 2411903250, 75 ),
( true, 2411903250, 106 ),
( false, 2411903250, 106 ),
( false, 2411903250, 106 ),

( false, 2776610778, 5 ),
( false, 2776610778, 5 ),
( true, 2776610778, 36 ),
( true, 2776610778, 36 ),
( true, 2776610778, 67 ),
( true, 2776610778, 67 ),
( true, 2776610778, 67 ),
( true, 2776610778, 98 ),
( true, 2776610778, 98 ),
( true, 2776610778, 98 ),

( true, 3192851890, 5 ),
( false, 3192851890, 5 ),
( false, 3192851890, 36 ),
( false, 3192851890, 36 ),
( true, 3192851890, 67 ),
( true, 3192851890, 67 ),
( true, 3192851890, 67 ),
( true, 3192851890, 98 ),
( true, 3192851890, 98 ),
( true, 3192851890, 98 ),

( true, 3392550461, 5 ),
( true, 3392550461, 5 ),
( true, 3392550461, 36 ),
( true, 3392550461, 36 ),
( true, 3392550461, 67 ),
( true, 3392550461, 67 ),
( false, 3392550461, 67 ),
( true, 3392550461, 98 ),
( true, 3392550461, 98 ),
( true, 3392550461, 98 ),

( true, 4294282922, 9 ),
( true, 4294282922, 9 ),
( true, 4294282922, 40 ),
( true, 4294282922, 40 ),
( true, 4294282922, 71 ),
( false, 4294282922, 71 ),
( false, 4294282922, 71 ),
( false, 4294282922, 102 ),
( true, 4294282922, 102 ),
( true, 4294282922, 102 ),

( true, 4390426046, 17 ),
( true, 4390426046, 17 ),
( true, 4390426046, 48 ),
( true, 4390426046, 48 ),
( true, 4390426046, 79 ),
( false, 4390426046, 79 ),
( false, 4390426046, 79 ),
( true, 4390426046, 110 ),
( true, 4390426046, 110 ),
( true, 4390426046, 110 ),

( true, 4538252718, 3 ),
( false, 4538252718, 3 ),
( false, 4538252718, 34 ),
( true, 4538252718, 34 ),
( false, 4538252718, 65 ),
( false, 4538252718, 65 ),
( true, 4538252718, 65 ),
( true, 4538252718, 96 ),
( true, 4538252718, 96 ),
( true, 4538252718, 96 ),

( true, 4541086879, 29 ),
( true, 4541086879, 29 ),
( true, 4541086879, 60 ),
( true, 4541086879, 60 ),
( true, 4541086879, 91 ),
( true, 4541086879, 91 ),
( true, 4541086879, 91 ),
( true, 4541086879, 122 ),
( true, 4541086879, 122 ),
( true, 4541086879, 122 ),

( true, 5031600982, 17 ),
( true, 5031600982, 17 ),
( true, 5031600982, 48 ),
( true, 5031600982, 48 ),
( true, 5031600982, 79 ),
( true, 5031600982, 79 ),
( true, 5031600982, 79 ),
( false, 5031600982, 110 ),
( false, 5031600982, 110 ),
( false, 5031600982, 110 ),

( true, 5072476418, 16 ),
( true, 5072476418, 16 ),
( true, 5072476418, 47 ),
( true, 5072476418, 47 ),
( true, 5072476418, 78 ),
( true, 5072476418, 78 ),
( true, 5072476418, 78 ),
( false, 5072476418, 109 ),
( true, 5072476418, 109 ),
( true, 5072476418, 109 ),

( true, 5605718187, 14 ),
( true, 5605718187, 14 ),
( false, 5605718187, 45 ),
( false, 5605718187, 45 ),
( false, 5605718187, 76 ),
( true, 5605718187, 76 ),
( true, 5605718187, 76 ),
( true, 5605718187, 107 ),
( true, 5605718187, 107 ),
( true, 5605718187, 107 ),

( true, 6572537060, 19 ),
( true, 6572537060, 19 ),
( true, 6572537060, 50 ),
( true, 6572537060, 50 ),
( true, 6572537060, 81 ),
( true, 6572537060, 81 ),
( true, 6572537060, 81 ),
( true, 6572537060, 112 ),
( true, 6572537060, 112 ),
( true, 6572537060, 112 ),

( true, 6874431457, 13 ),
( true, 6874431457, 13 ),
( true, 6874431457, 44 ),
( true, 6874431457, 44 ),
( true, 6874431457, 75 ),
( true, 6874431457, 75 ),
( true, 6874431457, 75 ),
( true, 6874431457, 106 ),
( false, 6874431457, 106 ),
( true, 6874431457, 106 ),

( true, 7506790944, 22 ),
( false, 7506790944, 22 ),
( false, 7506790944, 53 ),
( false, 7506790944, 53 ),
( true, 7506790944, 84 ),
( true, 7506790944, 84 ),
( false, 7506790944, 84 ),
( false, 7506790944, 115 ),
( false, 7506790944, 115 ),
( true, 7506790944, 115 ),

( true, 7640565356, 23 ),
( true, 7640565356, 23 ),
( true, 7640565356, 54 ),
( false, 7640565356, 54 ),
( false, 7640565356, 85 ),
( true, 7640565356, 85 ),
( true, 7640565356, 85 ),
( true, 7640565356, 116 ),
( true, 7640565356, 116 ),
( true, 7640565356, 116 ),

( true, 8136845974, 19 ),
( true, 8136845974, 19 ),
( true, 8136845974, 50 ),
( true, 8136845974, 50 ),
( true, 8136845974, 81 ),
( false, 8136845974, 81 ),
( false, 8136845974, 81 ),
( true, 8136845974, 112 ),
( true, 8136845974, 112 ),
( true, 8136845974, 112 ),

( true, 8669740028, 14 ),
( true, 8669740028, 14 ),
( true, 8669740028, 45 ),
( true, 8669740028, 45 ),
( true, 8669740028, 76 ),
( true, 8669740028, 76 ),
( false, 8669740028, 76 ),
( false, 8669740028, 107 ),
( true, 8669740028, 107 ),
( true, 8669740028, 107 ),

( true, 9066054929, 19 ),
( true, 9066054929, 19 ),
( true, 9066054929, 50 ),
( false, 9066054929, 50 ),
( false, 9066054929, 81 ),
( false, 9066054929, 81 ),
( true, 9066054929, 81 ),
( true, 9066054929, 112 ),
( true, 9066054929, 112 ),
( true, 9066054929, 112 ),

( true, 9541394142, 15 ),
( false, 9541394142, 15 ),
( false, 9541394142, 46 ),
( false, 9541394142, 46 ),
( false, 9541394142, 77 ),
( false, 9541394142, 77 ),
( false, 9541394142, 77 ),
( true, 9541394142, 108 ),
( true, 9541394142, 108 ),
( true, 9541394142, 108 );


-- ВЫДАЧА ЭКЗЕМПЛЯРОВ (ISSUE_COPIES)
insert into issue_copies (id_copies, id_reader, id_employee_issuing, id_employee_return, issuing_date, return_date) values
( 20, 1, 1, 5, '2020-03-12', '2020-04-05' ),
( 36, 2, 1, 5, '2020-03-13', '2020-04-05' ),
( 64, 3, 1, 5, '2020-03-14', '2020-04-05' ),
( 86, 4, 1, 7, '2020-03-15', '2020-04-07' ),
( 108, 6, 2, 7, '2020-03-16', '2020-04-07' ),
( 124, 8, 2, 7, '2020-03-17', '2020-04-07' ),
( 152, 9, 2, 10, '2020-03-18', '2020-04-10' ),
( 180, 10, 2, 10, '2020-03-19', '2020-04-10' ),
( 199, 12, 3, 6, '2020-03-20', '2020-04-16' ),
( 215, 13, 3, 6, '2020-03-21', '2020-04-16' ),
( 227, 15, 3, 6, '2020-03-22', '2020-04-17' ),
( 232, 17, 4, 6, '2020-03-23', '2020-04-18' ),
( 243, 18, 4, 9, '2020-03-24', '2020-04-19' ),
( 257, 19, 4, 9, '2020-03-25', '2020-04-19' ),
( 263, 20, 5, 9, '2020-03-26', '2020-04-19' ),
( 276, 25, 5, 4, '2020-03-27', '2020-04-24' ),
( 285, 28, 5, 4, '2020-03-28', '2020-04-24' ),
( 317, 31, 6, 5, '2020-03-29', '2020-04-25' ),
( 343, 40, 7, 9, '2020-03-31', '2020-04-29' ),
( 2, 1, 1, null, '2020-04-01', null ),
( 3, 2, 1, null, '2020-04-01', null ),
( 4, 3, 1, null, '2020-04-02', null ),
( 16, 4, 2, null, '2020-04-02', null ),
( 17, 5, 2, null, '2020-04-02', null ),
( 28, 6, 2, null, '2020-04-03', null ),
( 34, 1, 3, null, '2020-04-03', null ),
( 35, 2, 3, null, '2020-04-03', null ),
( 46, 3, 3, null, '2020-04-03', null ),
( 47, 4, 4, null, '2020-04-04', null ),
( 48, 5, 4, null, '2020-04-04', null ),
( 54, 6, 4, null, '2020-04-04', null ),
( 55, 7, 4, null, '2020-04-04', null ),
( 65, 1, 5, null, '2020-04-05', null ),
( 66, 2, 5, null, '2020-04-05', null ),
( 76, 3, 5, null, '2020-04-05', null ),
( 77, 4, 5, null, '2020-04-05', null ),
( 82, 8, 6, null, '2020-04-06', null ),
( 83, 9, 6, null, '2020-04-06', null ),
( 84, 10, 7, null, '2020-04-07', null ),
( 89, 11, 7, null, '2020-04-07', null ),
( 90, 12, 7, null, '2020-04-07', null ),
( 99, 13, 7, null, '2020-04-07', null ),
( 106, 8, 8, null, '2020-04-08', null ),
( 107, 9, 8, null, '2020-04-08', null ),
( 118, 10, 8, null, '2020-04-08', null ),
( 119, 11, 8, null, '2020-04-08', null ),
( 120, 12, 9, null, '2020-04-09', null ),
( 125, 8, 9, null, '2020-04-09', null ),
( 126, 9, 9, null, '2020-04-09', null ),
( 129, 10, 9, null, '2020-04-09', null ),
( 130, 11, 10, null, '2020-04-09', null ),
( 131, 12, 10, null, '2020-04-10', null ),
( 132, 13, 10, null, '2020-04-10', null ),
( 143, 14, 10, null, '2020-04-10', null ),
( 144, 15, 1, null, '2020-04-11', null ),
( 155, 16, 2, null, '2020-04-12', null ),
( 156, 17, 3, null, '2020-04-13', null ),
( 157, 18, 4, null, '2020-04-14', null ),
( 168, 19, 5, null, '2020-04-15', null ),
( 169, 20, 6, null, '2020-04-16', null ),
( 176, 14, 6, null, '2020-04-16', null ),
( 185, 15, 6, null, '2020-04-16', null ),
( 186, 16, 7, null, '2020-04-17', null ),
( 190, 17, 7, null, '2020-04-17', null ),
( 197, 14, 7, null, '2020-04-17', null ),
( 198, 15, 8, null, '2020-04-18', null ),
( 206, 16, 8, null, '2020-04-18', null ),
( 207, 17, 8, null, '2020-04-18', null ),
( 218, 21, 9, null, '2020-04-19', null ),
( 224, 21, 9, null, '2020-04-19', null ),
( 225, 22, 9, null, '2020-04-19', null ),
( 226, 23, 10, null, '2020-04-19', null ),
( 235, 21, 10, null, '2020-04-19', null ),
( 236, 22, 10, null, '2020-04-20', null ),
( 244, 24, 10, null, '2020-04-20', null ),
( 255, 24, 10, null, '2020-04-20', null ),
( 256, 25, 10, null, '2020-04-20', null ),
( 267, 24, 10, null, '2020-04-21', null ),
( 268, 25, 10, null, '2020-04-21', null ),
( 272, 26, 1, null, '2020-04-21', null ),
( 273, 27, 1, null, '2020-04-21', null ),
( 274, 28, 1, null, '2020-04-21', null ),
( 287, 26, 1, null, '2020-04-21', null ),
( 288, 27, 1, null, '2020-04-21', null ),
( 289, 28, 1, null, '2020-04-21', null ),
( 299, 29, 1, null, '2020-04-21', null ),
( 300, 30, 1, null, '2020-04-21', null ),
( 301, 26, 2, null, '2020-04-22', null ),
( 302, 27, 2, null, '2020-04-22', null ),
( 312, 28, 2, null, '2020-04-22', null ),
( 313, 29, 2, null, '2020-04-22', null ),
( 314, 30, 2, null, '2020-04-22', null ),
( 327, 31, 2, null, '2020-04-22', null ),
( 336, 32, 2, null, '2020-04-22', null ),
( 338, 34, 3, null, '2020-04-23', null ),
( 346, 32, 3, null, '2020-04-23', null ),
( 352, 32, 4, null, '2020-04-24', null ),
( 355, 34, 4, null, '2020-04-24', null ),
( 356, 35, 5, null, '2020-04-25', null ),
( 378, 36, 5, null, '2020-04-25', null ),
( 379, 37, 5, null, '2020-04-25', null ),
( 380, 38, 6, null, '2020-04-26', null ),
( 388, 36, 6, null, '2020-04-26', null ),
( 393, 36, 7, null, '2020-04-27', null ),
( 394, 37, 7, null, '2020-04-27', null ),
( 395, 38, 8, null, '2020-04-28', null ),
( 419, 39, 8, null, '2020-04-28', null ),
( 422, 39, 9, null, '2020-04-29', null ),
( 424, 1, 10, null, '2020-04-30', null ),
( 427, 2, 10, null, '2020-04-30', null ),
( 428, 3, 1, null, '2020-05-01', null ),
( 429, 4, 1, null, '2020-05-01', null ),
( 434, 39, 2, null, '2020-05-02', null ),
( 446, 5, 3, null, '2020-05-03', null ),
( 447, 6, 3, null, '2020-05-03', null ),
( 457, 5, 3, null, '2020-05-03', null ),
( 458, 6, 4, null, '2020-05-04', null ),
( 464, 5, 4, null, '2020-05-04', null ),
( 465, 6, 4, null, '2020-05-04', null ),
( 466, 7, 5, null, '2020-05-05', null ),
( 472, 8, 6, null, '2020-05-06', null ),
( 473, 9, 7, null, '2020-05-07', null ),
( 474, 10, 8, null, '2020-05-08', null ),
( 475, 11, 9, null, '2020-05-09', null ),
( 476, 12, 9, null, '2020-05-09', null ),
( 477, 13, 10, null, '2020-05-10', null );








--+----------------------------------------------------------------------------------------------+
--| WIEW (1): Полная информация о ячейке хранения и количестве забронированных в ней копиях книг |
--+----------------------------------------------------------------------------------------------+
create view count_copies_for_cell as
select st.id_cell, st.room, st.shelving, st.shelf, st.cell, count(bc.id_copies) as count_copies
from book_copies as bc
    full join storage as st on (bc.id_cell = st.id_cell)
    group by st.id_cell
    order by st.id_cell;

-- [select 1] Ячейки склада за которыми не зарезервировано ни одной книги
select id_cell, room, shelving, shelf, cell
from count_copies_for_cell
    where count_copies = 0 and room = 'склад';
-- [select 1] (Версия с использованием HAVING)
select st.id_cell, st.room, st.shelving, st.shelf, st.cell
from book_copies as bc
    full join storage as st on (bc.id_cell = st.id_cell)
    where room = 'склад'
    group by st.id_cell having count(bc.id_copies) = 0
    order by st.id_cell;

-- [select 2] сколько копий книг зарезервировано за складским помещением а сколько за читальным залом
select room, sum(count_copies) as count_copies
from count_copies_for_cell
    group by room;
    
--+----------------------------------------------------+
--| WIEW (2): Информация о должниках и их задолжностях |
--+----------------------------------------------------+
create view debt as
select rd.id_reader as debtor_id, rd.surname as debtor_surname, rd.name as debtor_name, rd.patronymic as debtor_patronymic, bc.id_copies, bk.isbn, bk.title, bk.publication, ic.issuing_date
from issue_copies as ic 
    join book_copies as bc on (ic.id_copies = bc.id_copies)
    join books as bk on (bc.isbn = bk.isbn)
    join readers as rd on (rd.id_reader = ic.id_reader)
    where bc.availability = false
    order by rd.surname asc, bk.title asc, bk.publication;

-- [select 3] Книги находящиеся в задолжности у читателя и срок задолжности каждой книги
select id_copies, isbn, title, publication, issuing_date, age(issuing_date) as period
from debt
    where debtor_id = 15;

-- [select 4] Читатели и количество задолженных ими книг 
select debtor_id, debtor_surname, debtor_name, debtor_patronymic, count(id_copies) as count_debt
from debt
    group by debtor_id, debtor_surname, debtor_name, debtor_patronymic
    order by count_debt desc, debtor_id asc;

-- [select 5] Список задолжаемых книг за "апрель" 2020 года
select id_copies, isbn, title, publication, issuing_date
from debt
    where to_char(issuing_date, 'YYYY-MM') = '2020-04'
    order by id_copies;

--+---------------------------------------------------------------------------+
--| WIEW (3): Полная информация о книгах находящихся в базе данных библиотеки |
--+---------------------------------------------------------------------------+
create view full_inf_books as
select bk.isbn, bk.title, bk.publication, bk.publisher, bk.subject, bk.realease_date, au.author_id, au.surname as author_surname, au.name as author_name, au.patronymic as author_patronymic
from books as bk                                      
    join books_authors as ba  on (bk.isbn = ba.isbn)
    join authors as au on (au.author_id = ba.author_id);

-- [select 6] Молодой человек давным давно прочел книгу, которая ему понравилась, но он забыл ее название. Зато он знает что у издателя было смешное название "Букбастер", жанр данного произведения был "комедия", а одним из авторов был человек по фамилии "Романенко". Необходим список произведений попадающих под эти критерии.
select distinct title, publication
from full_inf_books
    where publisher = 'Букбастер'and subject = 'комедия' and author_surname = 'Романенко';

-- [select 7] Моисеенко Устин Борисович пришел вернуть книгу "Одноглазый поцелуй: 1 издание", и с ехидной улыбкой поинтересовался "Кто причастен к созданию этого чуда?"
-- (Вывести ФИО авторов книги по названию и номеру издания).
select concat_ws(' ', author_surname, author_name, author_patronymic) as author
from full_inf_books
    where title = 'Одноглазый поцелуй' and publication = 1
    order by title asc, publication asc;

--+------------------------------------------------+
--| WIEW (4): Информация о читателях и из возрасте |
--+------------------------------------------------+
create view readers_years_old as
select id_reader, surname, name, patronymic, date_part('year', age(birthday)) as years_old
from readers
    order by surname asc;

-- [select 8] Сколько лет читателю? (поиск читателя по его id)
select years_old
from readers_years_old
    where id_reader = 36;

-- [select 9] Список читателей около подросткового возраста (проводится презентация новой книги, необходимо определить целевую группу).
select *
from readers_years_old
    where years_old <= 25;

--+-----------------+
--| select без view |
--+-----------------+

-- [select 10] Кто из сотрудников работал на выдаче или возврате книг 10 апреля 2020 года?
select el.id_employee, concat_ws(' ', el.surname, el.name, el.patronymic) as full_name
from employees as el
    where el.id_employee in (
        select distinct id_employee_issuing from issue_copies where issuing_date = '2020-04-10'
    )
    or el.id_employee in (
        select distinct id_employee_return from issue_copies where return_date = '2020-04-10'
    );
-- [select 10] (Версия с использованием UNION)
select el.id_employee, concat_ws(' ', el.surname, el.name, el.patronymic) as full_name
from employees as el
    where el.id_employee in (
        select distinct id_employee_issuing from issue_copies where issuing_date = '2020-04-17'
        union
        select distinct id_employee_return from issue_copies where return_date = '2020-04-17'
    );

-- [select 11] Проводится ревизия книг, необходим список книг хрянящихся в ячейке в данный момент.
select bc.id_copies, bk.isbn, bk.title, bk.publication
from book_copies as bc
    join storage as st on (bc.id_cell = st.id_cell)
    join books as bk on (bc.isbn = bk.isbn)
    where bc.availability = true and st.id_cell = 50;

-- [select 12] Была сдана книга, ее необходимо положить на место прежнего хранения.
-- (Нужно определить точный путь к месту хранения экземпляра книги по его id)
select st.room, st.shelving, st.shelf, st.cell
from book_copies as bc
    join storage as st on (bc.id_cell = st.id_cell)
    where bc.id_copies = 36;

-- [select 13] Читатель хочет взять книгу под названием "Потрясающее решение". Нужен список мест хранения копий книги, которые сейчас в наличии.
select bk.publication, st.room, st.shelving, st.shelf, st.cell
from book_copies as bc
    join storage as st on (bc.id_cell = st.id_cell)
    join books as bk on (bc.isbn = bk.isbn)
    where bc.availability = true and title = 'Потрясающее решение';

-- [select 14] Проводится праздник в честь дня библиотекаря, необходим список выслуги лет сотрудников, для выдачи премии относительно их рабочему стажу.
select id_employee, concat_ws(' ', surname, name, patronymic) as full_name, date_part('year', age(start_date)) as seniority
from employees
    order by age(start_date) desc;

-- [select 15] В библиотеку пришла девочка, она очень впечатлена книгой "Найди смысл". Она хочет узнать какие еще у автора(ов) данной книги есть произведения.
select distinct bk.title, bk.publication
from books_authors as ba                                       
    join books as bk on (bk.isbn = ba.isbn)
    where ba.author_id in
    (
        select ba.author_id from books_authors as ba                                       
        join books as bk on (bk.isbn = ba.isbn)
        where bk.title = 'Найди смысл'
    )
    order by bk.title asc, bk.publication asc;








--+-----------+
--| FUNCTIONS |
--+-----------+

-- FUNCTION [1]: Определяет премию сотрудника по дате начала работы в библиотеке, и по сумме бонуса за каждый год выслуги лет
create function premium (start_date date, money_one_year money)
returns money
    as
    $$
        select date_part('year', age(start_date))::int * money_one_year
    $$
    language sql;
    
-- Пример использования функции: select выводит список сотрудников с припиской выслуги лет и, с использованием функции "premium", выдает информацию о премии сотрудников.
select id_employee, concat_ws(' ', surname, name, patronymic) as full_name, date_part('year', age(start_date)), premium(start_date, 500::money)
from employees
    order by age(start_date) desc;

-- FUNCTION [2]: Функция выводит список людей которые работали на выдаче или на возврате копий книг в оптеделенный календарный день.
create function who_works(working_day date)
returns table (id_employee int, full_name text)
    as
    $$
    declare
        who_works_issuing int [];
        who_works_return int [];
    begin
        who_works_issuing = array(select distinct id_employee_issuing from issue_copies where issuing_date = working_day);
        who_works_return = array(select distinct id_employee_return from issue_copies where return_date = working_day);
    return query
        select el.id_employee, concat_ws(' ', el.surname, el.name, el.patronymic) as full_name
        from employees as el
            where el.id_employee = any(who_works_issuing) or el.id_employee = any(who_works_return);
    return;
    end
    $$
    language plpgsql;

-- Пример использования функции:
select * from who_works('2020-04-17');








--+---------+
--| TRIGGER |
--+---------+

-- TRIGGER [1]: При внесении копии книги в таблицу выдачи книг "issue_copies", она автоматически определяется как выданная (не в наличии "availability = false") в таблице копий книг "book_copies".
create function fn_issuing()
returns trigger
as
$$
begin
	update book_copies set availability = false
	where (book_copies.id_copies = new.id_copies);
	return new;
end
$$
language plpgsql;

create trigger update_issuing_copies_availability
after insert
on issue_copies
for each row
execute procedure fn_issuing();

-- Проверка работоспособноси триггера
insert into issue_copies (id_copies, id_reader, id_employee_issuing, id_employee_return, issuing_date, return_date) values
( 189, 13, 10, null, '2020-05-12', null );
-- select * from issue_copies where id_copies = 189;
-- select * from book_copies where id_copies = 189;


-- TRIGGER [2]: При возврате книги в таблице выдачи книг "issue_copies" заполняются поля: id работника принявшего книгу "id_employee_return", дата возврата "return_date", при этом книга автоматически определяется как находящаяся в наличии "availability = true" в таблице копий книг "book_copies".
create function fn_return()
returns trigger
as
$$
begin
    update book_copies set availability = true
    where (book_copies.id_copies = old.id_copies);
    return old;
end
$$
language plpgsql;

create trigger update_return_copies_availability
after update of id_employee_return, return_date
on issue_copies
for each row
execute procedure fn_return();

-- Проверка работоспособности триггера
update issue_copies set id_employee_return = 10, return_date = '2020-05-13'
where id_copies = 189 and id_employee_return is null and return_date is null;
-- select * from issue_copies where id_copies = 189;
-- select * from book_copies where id_copies = 189;

-- УДАЛЕНИЕ СТРОКИ НА КОТОРОЙ ПРОВЕРЯЛИСЬ ВЕРХНИЕ ДВА ТРИГГЕРА
delete from issue_copies where (id_copies = 189) and (issuing_date = '2020-05-12');
update book_copies set availability = true where (book_copies.id_copies = 189);


-- TRIGGER [3]: При заполнении поля id_copies таблицы issue_copies необходимо проверять есть ли копия книги с таким id в наличии, что можно сделать по полю availability таблицы book_copies.
create function check_availability()
returns trigger
as
$$
begin
    if (not (select availability from book_copies where id_copies = new.id_copies)) then
        raise 'Книги с id_copies = % нет в наличии', new.id_copies;
    end if;
    return new;
end
$$
language plpgsql;

create constraint trigger issue_copies_check_availability
after insert
on issue_copies
for each row
execute procedure check_availability();

-- Проверка работоспособности триггера
-- транзакция прошла
-- insert into issue_copies (id_copies, id_reader, id_employee_issuing, id_employee_return, issuing_date, return_date) values
-- ( 189, 13, 10, null, '2020-05-12', null );
-- транзакция не прошла
-- insert into issue_copies (id_copies, id_reader, id_employee_issuing, id_employee_return, issuing_date, return_date) values
-- ( 189, 13, 10, null, '2020-05-12', null );

-- УДАЛЕНИЕ СТРОКИ НА КОТОРОЙ ПРОВЕРЯЛИСЬ ВЕРХНИЕ ДВА ТРИГГЕРА
-- delete from issue_copies where (id_copies = 189) and (issuing_date = '2020-05-12');
-- update book_copies set availability = true where (book_copies.id_copies = 189);
